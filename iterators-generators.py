# Протокол итерации - один из важнейших протоколов, который позволяет проходить по каждому элементу в коллекции
# Создаем переменную и вкладываем в неё iter(Входящая коллекция) 
# next(переменная в которую вложена iter)

   l = [1, 2, 3, 4, 5]
    variable_iterbl = iter(l)
    next(variable_iterbl)
    >>> 1
    next(variable_iterbl)
    >>> 2
    ...



# Циклы в итераторах, здесь при каждом вызове будет вызываться новая итерация до выполнения условия

    l = ['1', '22', '333', '4444', '55555', '666666', '7777777', '88888888', '999999999']
    
    def search_long_string(numbers):
        for item in numbers:
            if len(item) >= 5:
                return item
    

# Для успешного прохождения итерации с запоминанием позиции (курсора) используем iter()

    iter_var = iter(l)
    search_long_string(iter_var)
    >>> 55555
    search_long_string(iter_var)
    >>> 666666
    ...



# Генераторы iterbl элементы, которые не хранятся, а создаются по мере необходимости
# range - перезапускаемый генератор, такой итератор можно вызывать сколько угодно раз, потому что значения генерируются заново 

    numbers = range(10)
    for n in numbers:
            print(n)

    0
    1
    2
    3
    4
    ...



